class Solution {
    private:
     int f(int i,int sum,int n,vector<int>& arr){
        if(sum==0)return 1;
        if(i==0){
            if(sum%arr[0]==0){
                return 1;
            }
            return 0;
        }

        int take = 0;
        if(arr[i]<=sum){
            take = f(i,sum-arr[i],n,arr);
        }
        int nottake = f(i-1,sum,n,arr);
        
        return take+nottake;
    }
public:
    int change(int sum, vector<int>& arr) {
        int n = arr.size();
        //return f(n-1,sum,n,arr);

        vector<vector<int>> dp(n+1,vector<int> (sum+1,0));

        for( int i=0;i<n;i++){
            dp[i][0] = 1;
        }
        for(int j=0;j<=sum;j++){
             if(j%arr[0]==0){
                dp[0][j] = 1;
            }
        }

        for(int i=1;i<n;i++){
            for(int j=1;j<=sum;j++){
                int take = 0;
                if(arr[i]<=j){
                     take = dp[i][j-arr[i]];//(i,sum-arr[i],n,arr);
                }
                 int nottake = dp[i-1][j];//(i-1,sum,n,arr);
        
                 dp[i][j] = take+nottake;
            }
        }
        return dp[n-1][sum];
    }
};
